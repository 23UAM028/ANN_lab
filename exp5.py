# -*- coding: utf-8 -*-
"""EXP5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17Eomj9Isdl3b5mGnJ4kvlbEf_e96apnN
"""

!pip install openpyxl

from google.colab import files
 uload=files.upload()

 from google.colab import files
 drive.mount('/content/drive')

#Accesing student data
import numpy as np
import pandas as pd

df=pd.read_excel('Student_dataset.xlsx')
df.head()

# @title CGPA vs 10th Score

from matplotlib import pyplot as plt
df.plot(kind='scatter', x='CGPA', y='10th Score', s=32, alpha=.8)
plt.gca().spines[['top', 'right',]].set_visible(False)

import numpy as np

def initialize_parameters(layer_dims):
    np.random.seed(3)
    print("Layer Dimensions:", layer_dims)

    parameters = {}

    L = len(layer_dims)

    print("Total No. of layers in NN:", L)

    for i in range(1, L):
        # Corrected to layer_dims[i-1], layer_dims[i] for W
        parameters["W" + str(i)] = np.ones((layer_dims[i-1], layer_dims[i])) * 0.1
        parameters["b" + str(i)] = np.zeros((layer_dims[i], 1))

    return parameters

layer_dims = [4, 4, 1]
parameters = initialize_parameters(layer_dims)

print(parameters)

# Forward propagation
def linear_forward(A_prev, W, b):

  Z = np.dot(W.T, A_prev) + b
   #print(Z)
  return Z
def relu(Z):
  return np.maximum(0, Z)

def L_layer_forward(X, parameters):
    A = X
    caches = []
    print("\n", parameters)
    L = len(parameters) // 2
    for i in range(1, L):


      A_prev = A
    W = parameters['W' + str(i)]
    b = parameters['b' + str(i)]
    Z = linear_forward(A_prev, W, b)
    A = relu(Z)
    cache = (A_prev, W, b, Z)
    caches.append(cache)
    # Output layer
    W_out = parameters['W' + str(L)]
    b_out = parameters['b' + str(L)]
    Z_out = linear_forward(A, W_out, b_out)
    AL = Z_out
    return AL, caches

